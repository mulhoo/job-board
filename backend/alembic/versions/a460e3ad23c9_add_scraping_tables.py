"""Add scraping tables

Revision ID: a460e3ad23c9
Revises: 23af4efd3a6f
Create Date: 2025-09-24 16:05:41.174147

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a460e3ad23c9'
down_revision: Union[str, Sequence[str], None] = '23af4efd3a6f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_sources',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('base_url', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('rate_limit_seconds', sa.Integer(), nullable=True),
    sa.Column('max_jobs_per_scrape', sa.Integer(), nullable=True),
    sa.Column('last_scraped_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_jobs_scraped', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_job_sources_id'), 'job_sources', ['id'], unique=False)
    op.create_table('scraped_jobs',
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('external_url', sa.String(length=500), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('company', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('salary_range', sa.String(length=100), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('is_duplicate', sa.Boolean(), nullable=True),
    sa.Column('duplicate_of_job_id', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('has_description', sa.Boolean(), nullable=True),
    sa.Column('has_salary', sa.Boolean(), nullable=True),
    sa.Column('has_location', sa.Boolean(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['duplicate_of_job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['job_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scraped_jobs_id'), 'scraped_jobs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_scraped_jobs_id'), table_name='scraped_jobs')
    op.drop_table('scraped_jobs')
    op.drop_index(op.f('ix_job_sources_id'), table_name='job_sources')
    op.drop_table('job_sources')
    # ### end Alembic commands ###
